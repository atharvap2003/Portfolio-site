#include <iostream>
#include<string.h>
using namespace std;

int const size=3;

struct student{
    int rno;
    char name[20];
    float SGPA;
};
void accept(struct student list[size]);
void display(struct student list [80]);
void displayTop(struct student list[80]);
void insertSort(struct student list[size]);
void binarysearch(struct student list[size]);

void accept(struct student list[size])
{
    int i;
    for (i=0;i<size;i++)
    {
        cout<<"Enter rollno,name & SGPA:";
        cin>>list[i].rno>>list[i].name>>list[i].SGPA;
    }
}
void display(struct student list[80])
{
    int i;
    cout<<"\n Roll no \t Name \t SGPA \n";
    for(i=0;i<size;i++)
    {
        cout<<"\n"<<list[i].rno<<"\t"<<list[i].name<<"\t"<<list[i].SGPA;
    }
}
void displayTop(struct student list[80])
{
    int i;
    cout<<"\n\nRollno\tName\tSGPA\n";
    for(i=0;i<3;i++)
    {
        cout<<"\n"<<list[i].rno<<"\t"<<list[i].name<<"\t"<<list[i].SGPA;
    }
}

void insertSort(struct student list[size])
{
    int k,j;
    struct student temp;
    for(k=1;k<size;k++)
    {
        temp=list[k];
        j=k-1;
        while(strcmp(list[j].name,temp.name)>0&&j>=0)
        {
            list[j+1]=list[j];
            --j;
        }
        list[j+1]=temp;
    }
}
void binarysearch(struct student list[size])
{
    int k, start,end, mid;
    char search[80];
    cout<<"\n Enter name of the students you want to search";
    cin>>search;
    
    start=0;
    end=size-1;
    mid=(start+end)/2;
    
    while(start<=end)
    {
        if(strcmp(list[mid].name,search)<0)
        start=mid+1;
        
        else if(strcmp(list[mid].name,search)==0)
        {
            cout<<"\n"<<list[mid].rno<<"\t"<<list[mid].name<<"\t"<<list[mid].SGPA;
            break;
        }
        else
        end=mid-1;
        mid=(start+end)/2;
    }
    if(start>end)
    cout<<search<<"not found in the list";
}
int main()
{
    int ch, i;
    struct student data[20];
    accept (data);
    
    cout<<"\n 1:Insertion Sort";

    cout<<"\n 2:Binary Search";
    cout<<"\n Select your choice:";
    cin>>ch;

    switch(ch)
    {
        case 1:
        insertSort(data);
        display(data);
        break;

        case 2:
        binarysearch(data);
        break;
    
        default:
        cout<<"Invalid choice....";
    }
}